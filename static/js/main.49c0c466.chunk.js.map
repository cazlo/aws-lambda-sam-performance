{"version":3,"sources":["dashboard/build/data.js","dashboard/memory/data.js","sam-logo.png","Header.js","dashboard/Title.js","dashboard/memory/Memory.js","dashboard/latency/coldStarts/ColdStarts.js","dashboard/latency/Latency.js","dashboard/build/Build.js","dashboard/overview/util.js","dashboard/overview/OverviewRadar.js","dashboard/overview/Overview.js","dashboard/Dashboard.js","App.js","theme.js","index.js"],"names":["module","exports","circleci","devMachine","count","useStyles","makeStyles","theme","logo","marginTop","Header","classes","Container","maxWidth","Grid","container","spacing","item","src","alt","className","Typography","variant","component","gutterBottom","align","Title","props","color","children","Memory","ColdStarts","Latency","Build","apps","metrics","buildCases","latencyMinMaxReport","reduce","acc","app","l","latencyData","forEach","metric","min","Infinity","max","Math","toSeconds","duration","minutesMatch","match","secondsMatch","seconds","Number","parseInt","buildMinMaxReport","buildData","buildCase","map","memoryMinMaxReport","memoryData","Object","keys","buildChartData","selectedLatencyMetric","selectedBuild","selectedMemoryMetric","normalizedLatencyData","kpi","normalizedMemoryData","normalizedBuildData","avg","s","v","length","customizedTick","payload","x","y","textAnchor","anchor","value","text-anchor","fill","appToColor","includes","formControl","margin","minWidth","selectEmpty","OverviewRadar","React","useState","isAppSelected","appSelection","setAppSelection","appOpacity","setAppOpacity","chartData","setChartData","selectedLatency","setSelectedLatency","setSelectedBuild","selectedMemory","setSelectedMemory","sortedApps","array","comparator","stabilizedThis","el","index","sort","a","b","order","stableSort","app1","app2","Box","direction","alignContent","xs","FormControl","InputLabel","id","Select","labelId","onChange","event","target","MenuItem","key","build","cx","cy","outerRadius","width","height","data","dataKey","tick","angle","domain","orientation","tickCount","selection","push","selectedApps","idx","name","stroke","fillOpacity","strokeOpacity","Table","TableHead","TableRow","TableCell","TableBody","hover","onMouseEnter","e","onMouseLeave","onClick","newState","Icon","style","round","Overview","root","display","toolbar","paddingRight","appBarSpacer","mixins","content","flexGrow","overflow","paddingTop","paddingBottom","paper","padding","flexDirection","fixedHeight","Dashboard","CssBaseline","Paper","Copyright","Link","href","Date","getFullYear","App","my","createMuiTheme","palette","type","blueGrey","ReactDOM","render","ThemeProvider","document","querySelector"],"mappings":"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","file":"static/js/main.49c0c466.chunk.js","sourcesContent":["module.exports = {\n    \"micronaut-one-three-six\": {\n        circleci:[\"7m58s\", \"7m59s\", \"8m38s\", \"9m41s\", \"8m51s\", \"8m6s\", \"8m11s\"],\n        devMachine: [],\n    },\n    \"micronaut-two\": {\n        circleci:[\"8m25s\", \"7m43s\", \"8m33s\", \"7m42s\", \"7m59s\", \"7m58s\", \"7m46s\"],\n        devMachine: [],\n    },\n    \"node-express\": {\n        circleci:[\"27s\", \"22s\", \"30s\", \"18s\", \"17s\", \"33s\", \"36s\"],\n        devMachine: [],\n    },\n    \"node-express-typescript\": {\n        circleci:[\"31s\", \"38s\", \"52s\", \"1m28s\", \"27s\", \"41s\", \"42s\"],\n        devMachine: [],\n    },\n    \"quarkus-api-gw-event-handler\": {\n        circleci:[\"5m7s\", \"5m25s\", \"5m7s\", \"5m31s\", \"5m9s\", \"5m11s\", \"5m17s\"],\n        devMachine: [],\n    },\n    \"quarkus-api-gw-proxy\": {\n        circleci:[\"7m19s\", \"6m52s\", \"7m12s\", \"7m32s\", \"7m39s\", \"7m48s\", \"7m45s\"],\n        devMachine: [],\n    },\n    \"quarkus-api-gw-event-handler-jvm\": {\n        circleci:[\"0m92s\", \"0m115s\", \"0m103s\", \"0m89s\", \"0m102s\", \"0m99s\", \"0m91s\"],\n        devMachine: [],\n    },\n    \"quarkus-api-gw-proxy-jvm\": {\n        circleci:[\"0m138s\", \"0m131s\", \"0m142s\", \"0m146s\", \"0m156s\", \"0m170s\",\"0m184s\"],\n        devMachine: [],\n    },\n}","module.exports = {\n    \"micronaut-one-three-six\": {\n        \"min\": 36,\n        \"avg\": 100.2508,\n        \"p75\": 106,\n        \"p95\": 106,\n        \"p99\": 107,\n        \"max\": 107,\n        \"stdDev\": 11.8928,\n        count: 630891\n    },\n    \"micronaut-two\": {\n        \"min\": 38,\n        \"avg\": 104.5074,\n        \"p75\": 109,\n        \"p95\": 110,\n        \"p99\": 110,\n        \"max\": 110,\n        \"stdDev\": 12.1292,\n        count: 663785\n    },\n    \"node-express\": {\n        \"min\": 75,\n        \"avg\": 89.9775,\n        \"p75\": 95,\n        \"p95\": 97,\n        \"p99\": 97,\n        \"max\": 101,\n        \"stdDev\": 6.3451,\n        count: 626487\n    },\n    \"node-express-typescript\": {\n        \"min\": 75,\n        \"avg\": 90.0673,\n        \"p75\": 95,\n        \"p95\": 97,\n        \"p99\": 97,\n        \"max\": 99,\n        \"stdDev\": 6.3158,\n        count: 644247\n    },\n    \"quarkus-api-gw-event-handler\": {\n        \"min\": 30,\n        \"avg\": 79.2933,\n        \"p75\": 86,\n        \"p95\": 86,\n        \"p99\": 87,\n        \"max\": 87,\n        \"stdDev\": 9.6603,\n        count: 645863\n    },\n    \"quarkus-api-gw-proxy\": {\n        \"min\": 33,\n        \"avg\": 97.6714,\n        \"p75\": 104,\n        \"p95\": 104,\n        \"p99\": 105,\n        \"max\": 105,\n        \"stdDev\": 10.2528,\n        count: 645534\n    },\n    \"quarkus-api-gw-event-handler-jvm\": {\n        \"min\": 103,\n        \"avg\": 126.8671,\n        \"p75\": 132,\n        \"p95\": 133,\n        \"p99\": 133,\n        \"max\": 133,\n        \"stdDev\": 7.1486,\n        count: 605135\n    },\n    \"quarkus-api-gw-proxy-jvm\": {\n        \"min\": 124,\n        \"avg\": 163.9199,\n        \"p75\": 174,\n        \"p95\": 178,\n        \"p99\": 179,\n        \"max\": 179,\n        \"stdDev\": 10.9153,\n        count: 608673\n    },\n}","module.exports = __webpack_public_path__ + \"static/media/sam-logo.71cd9000.png\";","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport logo from \"./sam-logo.png\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        marginTop: '2em'\n    }\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Container maxWidth=\"xs\">\n                <Grid container spacing={0}>\n                    <Grid item>\n                        <img src={logo}  alt=\"logo\" className={classes.logo} />\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n                SAM Serverless API Performance Analysis\n            </Typography>\n        </div>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Title from \"../Title\";\n\nexport default function Memory() {\n    return (\n        <div>\n            <Title>Memory</Title>\n            <Container>\n                <Grid container>\n                    <Grid item>\n                        todo\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Title from \"../../Title\";\n\nexport default function ColdStarts() {\n    return (\n        <div>\n            <Title>Lambda Cold Starts</Title>\n            <Container>\n                <Grid container>\n                    <Grid item>\n                        todo\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Title from \"../Title\";\nimport ColdStarts from \"./coldStarts/ColdStarts\";\n\n\nexport default function Latency() {\n    return (\n        <div>\n            <Title>Latency</Title>\n            <Container>\n                <Grid container>\n                    <Grid item>\n                        todo\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item>\n                        <ColdStarts/>\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Title from \"../Title\";\n\nexport default function Build() {\n    return (\n        <div>\n            <Title>Build</Title>\n            <Container>\n                <Grid container>\n                    <Grid item>\n                        todo\n                    </Grid>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n","\n//{ latency data in shape\n//  \"micronaut-one-three-six\": {\n//   \"min\": 8,\n//   \"avg\": 25.960118308867933,\n//   \"p75\": 18.54256943985801,\n//   \"p95\": 33.8254177578772,\n//   \"p99\": 280.36927497828964,\n//   \"max\": 3171,\n//   \"count\": 210297\n//  },..\nimport latencyData from \"../../../../cloudwatch/etl/result/IntegrationLatency-overall\";\nimport buildData from \"../build/data\";\nimport memoryData from \"../memory/data\";\n\nconst apps = [\n    \"micronaut-one-three-six\",\n    \"micronaut-two\",\n    \"node-express\",\n    \"node-express-typescript\",\n    \"quarkus-api-gw-event-handler\",\n    \"quarkus-api-gw-proxy\",\n    \"quarkus-api-gw-event-handler-jvm\",\n    \"quarkus-api-gw-proxy-jvm\"\n];\nconst metrics = [\n    \"min\",\n    \"avg\",\n    \"p75\",\n    \"p95\",\n    \"p99\",\n    \"max\",\n    \"stdDev\"\n];\nconst buildCases = [\n    \"circleci\",\n    \"devMachine\"\n]\n\n// builds report like: { min: {min: number, max: number}. avg: {min: number, max: number}, ...}\nconst latencyMinMaxReport = apps.reduce((acc, app) => {\n    const l = latencyData[app];\n    metrics.forEach((metric)=>{\n        if(!acc[metric]) acc[metric] = { min:Infinity, max:-Infinity };\n        acc[metric] = {\n            min: Math.min(l[metric], acc[metric].min),\n            max: Math.max(l[metric], acc[metric].max),\n        }\n    })\n    return acc;\n}, {})\n\nconst toSeconds = duration => {\n    const minutesMatch = duration.match(/(\\d.*)m.*/);\n    const secondsMatch = duration.match(/(\\d.*)m(\\d.*)s/);\n    const seconds = !secondsMatch ? 0 : Number.parseInt(secondsMatch[2], 10);\n    return minutesMatch\n        ? (minutesMatch[1] * 60) + seconds\n        : seconds;\n}\n\n// builds report like: { circleci: {min: number, max: number}. devmachine: {min: number, max: number}, ...}\nconst buildMinMaxReport = apps.reduce((acc, app) => {\n    const l = buildData[app];\n    buildCases.forEach((buildCase)=>{\n        if(!acc[buildCase]) acc[buildCase] = { min:Infinity, max:-Infinity };\n        acc[buildCase] = {\n            min: Math.min(...l[buildCase].map(toSeconds), acc[buildCase].min),\n            max: Math.max(...l[buildCase].map(toSeconds), acc[buildCase].max),\n        }\n    })\n    return acc;\n}, {})\n\n// builds report like: { min: {min: number, max: number}. avg: {min: number, max: number}, ...}\nconst memoryMinMaxReport = apps.reduce((acc, app) => {\n    const l = memoryData[app];\n    Object.keys(l).forEach((metric)=>{\n        if(!acc[metric]) acc[metric] = { min:Infinity, max:-Infinity };\n        acc[metric] = {\n            min: Math.min(l[metric], acc[metric].min),\n            max: Math.max(l[metric], acc[metric].max),\n        }\n    })\n    return acc;\n}, {})\n\nconst avgMetric = metrics[1];\nconst circleci = buildCases[0];\nconst buildChartData = (selectedLatencyMetric = \"p75\", selectedBuild = circleci, selectedMemoryMetric = \"p75\")=> {\n    // changes data to range 0-10\n    const normalizedLatencyData = apps.reduce((acc, app) => {\n        const l = latencyData[app][selectedLatencyMetric];\n        const min = latencyMinMaxReport[selectedLatencyMetric].min;\n        const max = latencyMinMaxReport[selectedLatencyMetric].max;\n        // 1- since lower values are better for latency kpi\n        acc[app] = (1 - (l - min) / (max - min)) * 10\n        return acc;\n    }, {kpi: 'latency'});\n\n    const normalizedMemoryData = apps.reduce((acc, app) => {\n        const l = memoryData[app][selectedMemoryMetric];\n        const min = memoryMinMaxReport[selectedMemoryMetric].min;\n        const max = memoryMinMaxReport[selectedMemoryMetric].max;\n        // 1- since lower values are better for memory kpi\n        acc[app] = (1 - (l - min) / (max - min)) * 10\n        return acc;\n    }, { kpi: 'memory'})\n\n    const normalizedBuildData = apps.reduce((acc, app) => {\n        const l = buildData[app][selectedBuild];\n        const sum = l.map(toSeconds).reduce((s, v) => s + v, 0);\n        const avg = sum / l.length;\n        const min = buildMinMaxReport[selectedBuild].min;\n        const max = buildMinMaxReport[selectedBuild].max;\n        // 1- since lower values are better for build kpi\n        acc[app] = (1 - (avg - min) / (max - min)) * 10\n        return acc;\n    }, { kpi: 'build'})\n\n    return [\n        normalizedLatencyData,\n        normalizedMemoryData,\n        normalizedBuildData\n    ];\n}\n\nexport {\n    buildChartData, apps, metrics, avgMetric, buildCases\n}","import React from 'react';\nimport {\n    Radar, RadarChart, PolarGrid,\n    PolarAngleAxis, PolarRadiusAxis,\n} from 'recharts';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport {buildChartData, apps, metrics, buildCases} from \"./util\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst customizedTick = (props) => {\n    const {payload, x, y, textAnchor} = props;\n    const anchor = payload.value === 'latency' ? 'start' : textAnchor;\n    return (\n        <text x={x} y={y} text-anchor={anchor} fill={'white'}>\n            {payload.value}\n        </text>\n    );\n};\n\nconst appToColor = apps.reduce((acc, app) => {\n    let color;\n    if (app.includes(\"jvm\")) {\n        color = \"#d9380f\";\n    } else if (app.includes(\"quarkus\")) {\n        color = \"#4594ea\";\n    } else if (app.includes(\"node\")) {\n        color = \"#339834\";\n    } else if (app.includes(\"micronaut\")) {\n        color = \"#1a181a\";\n    }\n    acc[app] = color\n    return acc;\n}, {})\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst stableSort = (array, comparator) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function OverviewRadar() {\n    const classes = useStyles();\n\n    const [appSelection, setAppSelection] = React.useState(apps.reduce((isAppSelected, app) => {\n        isAppSelected[app] = true;\n        return isAppSelected;\n    }, {}));\n    const [appOpacity, setAppOpacity] = React.useState(apps.reduce((appOpacity, app) => {\n        appOpacity[app] = 0.5;\n        return appOpacity;\n    }, {}));\n    const [chartData, setChartData] = React.useState(buildChartData());\n    const [selectedLatency, setSelectedLatency] = React.useState(\"p75\");\n    const [selectedBuild, setSelectedBuild] = React.useState(buildCases[0]);\n    const [selectedMemory, setSelectedMemory] = React.useState(\"p75\");\n    const selectedApps = (selection = appSelection) => apps.reduce((acc, app) => {\n        if (selection[app]) acc.push(app);\n        return acc;\n    }, [])\n    const sortedApps =  stableSort(apps, (app1, app2) =>\n        (chartData[0][app2] + chartData[1][app2] + chartData[2][app2]) - (chartData[0][app1] + chartData[1][app1] + chartData[2][app1]))\n    return (\n        <Box>\n            <Grid container direction=\"row\" alignContent=\"space-around\" spacing={3}>\n                <Grid container direction=\"column\" alignContent=\"space-around\" spacing={3} xs={3}>\n                    <Grid item >\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Latency Metric</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={selectedLatency}\n                                onChange={(event) => {\n                                    setSelectedLatency(event.target.value);\n                                    setChartData(buildChartData(event.target.value, selectedBuild, selectedMemory));\n                                }}\n                            >\n                                {metrics.map(metric =>\n                                    <MenuItem key={metric} value={metric}>{metric}</MenuItem>\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item >\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Build Metric</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={selectedBuild}\n                                onChange={(event) => {\n                                    setSelectedBuild(event.target.value);\n                                    setChartData(buildChartData(selectedLatency, event.target.value, selectedMemory));\n                                }}\n                            >\n                                {buildCases.map(build =>\n                                    <MenuItem key={build} value={build}>{build}</MenuItem>\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item >\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Memory Metric</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={selectedMemory}\n                                onChange={(event) => {\n                                    setSelectedMemory(event.target.value);\n                                    setChartData(buildChartData(selectedLatency, selectedBuild, event.target.value));\n                                }}\n                            >\n                                {metrics.map(metric =>\n                                    <MenuItem key={metric} value={metric}>{metric}</MenuItem>\n                                )}\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid item xs={3} alignContent=\"space-around\">\n                    <RadarChart cx={300} cy={200} outerRadius={175} width={600} height={300} data={chartData}>\n                        <PolarGrid/>\n                        <PolarAngleAxis dataKey=\"kpi\" tick={customizedTick}/>\n                        <PolarRadiusAxis angle={90} domain={[0, 10]} orientation=\"left\" tickCount={11} />\n                        {selectedApps().map(((app, idx) => (\n                            <Radar key={app} name={app} dataKey={app} stroke={appToColor[app]} fill={appToColor[app]}\n                                   fillOpacity={appOpacity[app]}\n                                   strokeOpacity={appOpacity[app]}\n                            />\n                        )))}\n                    </RadarChart>\n                </Grid>\n                <Grid item xs={12} alignContent=\"space-around\">\n                    <Grid item >\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Display</TableCell>\n                                    <TableCell>Framework</TableCell>\n                                    <TableCell>Total Score</TableCell>\n                                    <TableCell>Latency</TableCell>\n                                    <TableCell>Memory</TableCell>\n                                    <TableCell>Build</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {sortedApps.map((app, idx) =>\n                                    <TableRow key={`${app}-rank-table-row`} hover\n                                              onMouseEnter={(e) => {\n                                                  setAppOpacity(apps.reduce((appOpacity, a) => {\n                                                      appOpacity[a] = a === app ? 1.0 : 0.1;\n                                                      return appOpacity;\n                                                  }, {}))\n                                              }}\n                                              onMouseLeave={(e) => {\n                                                    setAppOpacity(apps.reduce((appOpacity, a) => {\n                                                        appOpacity[a] = 0.5;\n                                                        return appOpacity;\n                                                    }, {}))\n                                                }}\n                                              onClick={(e) => {\n                                                    const newState = {\n                                                        ...appSelection,\n                                                        [app]: !appSelection[app]\n                                                    };\n                                                    setAppSelection(newState);\n                                                    setChartData(buildChartData(selectedLatency, selectedBuild, selectedMemory))\n                                                }}\n                                    >\n                                        <TableCell><Icon style={{color:appToColor[app]}}>{appSelection[app] ? \"check-outline\" : \"close-box-outline\"}</Icon></TableCell>\n                                        <TableCell>{app}</TableCell>\n                                        <TableCell>{Math.round(chartData[0][app] + chartData[1][app] + chartData[2][app])}</TableCell>\n                                        <TableCell>{Math.round(chartData[0][app])}</TableCell>\n                                        <TableCell>{Math.round(chartData[1][app])}</TableCell>\n                                        <TableCell>{Math.round(chartData[2][app])}</TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>)\n}\n","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Title from \"../Title\";\n// import AnimatedRadar from \"./AnimatedRadar\";\nimport Radar from \"./OverviewRadar\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default function Overview() {\n    return (\n        <Box>\n            <Title>Overview</Title>\n            <Grid container direction=\"column\">\n                <Grid item><Radar /></Grid>\n                <Grid item></Grid>\n            </Grid>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Memory from \"./memory/Memory\";\nimport Latency from \"./latency/Latency\";\nimport Build from \"./build/Build\";\nimport Overview from \"./overview/Overview\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper} variant=\"outlined\">\n                <Overview/>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Paper className={classes.paper} variant=\"outlined\">\n                <Latency/>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Paper className={classes.paper} variant=\"outlined\">\n                <Memory/>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Paper className={classes.paper} variant=\"outlined\">\n                <Build/>\n              </Paper>\n            </Grid>\n\n          </Grid>\n        </Container>\n    </div>\n  );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Header from \"./Header\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport \"./App.css\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://andrewpaettie.com/\">\n        Andrew Paettie\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nexport default function App() {\n  return (\n    <Container>\n      <Box my={4}>\n        <Header/>\n        <Dashboard/>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    color: blueGrey[\"A400\"]\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}