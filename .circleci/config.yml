# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  micronaut-2-build:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make build-micronaut-2
      - persist_to_workspace:
          root: /tmp/aws-lambda-sam-performance/
          paths:
            - Makefile
            - micronaut/micronaut-two/*
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/micronaut/micronaut-two/build/function.zip
  micronaut-2-deploy:
    executor: aws-cli/default
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - attach_workspace:
          at: /tmp/aws-lambda-sam-performance/
      - aws-cli/setup
      - run:
          command: make deploy-micronaut-2
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/micronaut/micronaut-two/packaged.yaml

  micronaut-1-3-6-build:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make build-micronaut-1-3-6
      - persist_to_workspace:
          root: /tmp/aws-lambda-sam-performance/
          paths:
            - Makefile
            - micronaut/micronaut-one-three-six/*
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/micronaut/micronaut-one-three-six/build/function.zip
  micronaut-1-3-6-deploy:
    executor: aws-cli/default
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - attach_workspace:
          at: /tmp/aws-lambda-sam-performance/
      - aws-cli/setup
      - run:
          command: make deploy-micronaut-1-3-6
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/micronaut/micronaut-one-three-six/packaged.yaml

  quarkus-api-gw-proxy-build:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make build-quarkus-api-gw-proxy
      - persist_to_workspace:
          root: /tmp/aws-lambda-sam-performance/
          paths:
            - Makefile
            - quarkus/quarkus-api-gw-proxy/*
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/quarkus/quarkus-api-gw-proxy/target
  quarkus-api-gw-proxy-deploy:
    executor: aws-cli/default
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - attach_workspace:
          at: /tmp/aws-lambda-sam-performance/
      - aws-cli/setup
      - run:
          command: make deploy-quarkus-api-gw-proxy
      - run:
          command: make deploy-quarkus-api-gw-proxy-jvm
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/quarkus/quarkus-api-gw-proxy/packaged.yaml

  quarkus-api-gw-event-handler-build:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make build-quarkus-api-gw-event-handler
      - persist_to_workspace:
          root: /tmp/aws-lambda-sam-performance/
          paths:
            - Makefile
            - quarkus/quarkus-api-gw-event-handler/*
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/quarkus/quarkus-api-gw-event-handler/target
  quarkus-api-gw-event-handler-deploy:
    executor: aws-cli/default
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - attach_workspace:
          at: /tmp/aws-lambda-sam-performance/
      - aws-cli/setup
      - run:
          command: make deploy-quarkus-api-gw-event-handler
      - run:
          command: make deploy-quarkus-api-gw-event-handler-jvm
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/quarkus/quarkus-api-gw-event-handler/packaged.yaml

  node-express-build:
    docker:
      - image: cimg/node:12.18
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make build-node-express
      - persist_to_workspace:
          root: /tmp/aws-lambda-sam-performance/
          paths:
            - Makefile
            - nodejs/node-express/*
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/nodejs/node-express/build/function.zip
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/nodejs/node-express/build/reports
      - store_test_results:
          path: /tmp/aws-lambda-sam-performance/nodejs/node-express/build/reports/junit/jest
  node-express-deploy:
    executor: aws-cli/default
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - attach_workspace:
          at: /tmp/aws-lambda-sam-performance/
      - aws-cli/setup
      - run:
          command: make deploy-node-express
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/nodejs/node-express/packaged.yaml

  node-express-typescript-build:
    docker:
      - image: cimg/node:12.18
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: make build-node-express-typescript
      - persist_to_workspace:
          root: /tmp/aws-lambda-sam-performance/
          paths:
            - Makefile
            - nodejs/node-express-typescript/*
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/nodejs/node-express-typescript/build/function.zip
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/nodejs/node-express-typescript/build/reports
      - store_test_results:
          path: /tmp/aws-lambda-sam-performance/nodejs/node-express-typescript/build/reports/junit/jest
  node-express-typescript-deploy:
    executor: aws-cli/default
    working_directory: /tmp/aws-lambda-sam-performance
    steps:
      - attach_workspace:
          at: /tmp/aws-lambda-sam-performance/
      - aws-cli/setup
      - run:
          command: make deploy-node-express-typescript
      - store_artifacts:
          path: /tmp/aws-lambda-sam-performance/nodejs/node-express-typescript/packaged.yaml
orbs:
  aws-cli: circleci/aws-cli@1.0.0
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - micronaut-2-build:
          filters:
            branches:
              only:
                - /micronaut.*/
                - master
      - micronaut-2-deploy:
          requires:
            - micronaut-2-build
          filters:
            branches:
              only:
                - /micronaut.*/
                - master
      - micronaut-1-3-6-build:
          filters:
            branches:
              only:
                - /micronaut.*/
                - master
      - micronaut-1-3-6-deploy:
          requires:
            - micronaut-1-3-6-build
          filters:
            branches:
              only:
                - /micronaut.*/
                - master

      - quarkus-api-gw-proxy-build:
          filters:
            branches:
              only:
                - /quarkus.*/
                - master
      - quarkus-api-gw-proxy-deploy:
          requires:
            - quarkus-api-gw-proxy-build
          filters:
            branches:
              only:
                - /quarkus.*/
                - master
      - quarkus-api-gw-event-handler-build:
          filters:
            branches:
              only:
                - /quarkus.*/
                - master
      - quarkus-api-gw-event-handler-deploy:
          requires:
            - quarkus-api-gw-event-handler-build
          filters:
            branches:
              only:
                - /quarkus.*/
                - master

      - node-express-build:
          filters:
            branches:
              only:
                - /node.*/
                - master
      - node-express-deploy:
          requires:
            - node-express-build
          filters:
            branches:
              only:
                - /node.*/
                - master

      - node-express-typescript-build:
          filters:
            branches:
              only:
                - /node.*/
                - master
      - node-express-typescript-deploy:
          requires:
            - node-express-typescript-build
          filters:
            branches:
              only:
                - /node.*/
                - master